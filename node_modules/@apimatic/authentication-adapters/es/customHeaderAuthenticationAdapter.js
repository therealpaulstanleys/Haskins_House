import { passThroughInterceptor } from '@apimatic/core-interfaces';
import { mergeHeaders } from '@apimatic/http-headers';

var customHeaderAuthenticationProvider = function (_a) {
  var token = _a.token,
      apiKey = _a.apiKey;
  return function (requiresAuth) {
    if (!requiresAuth) {
      return passThroughInterceptor;
    }

    return function (request, options, next) {
      var _a;

      var customHeaderParams = {
        token: token,
        'api-key': apiKey
      };
      request.headers = (_a = request.headers) !== null && _a !== void 0 ? _a : {};
      mergeHeaders(request.headers, customHeaderParams);
      return next(request, options);
    };
  };
};

export { customHeaderAuthenticationProvider };